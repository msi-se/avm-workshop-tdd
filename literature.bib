@online{ionos_test_2020,
	title = {Test Driven Development: So funktioniert die Methode},
	url = {https://www.ionos.de/digitalguide/websites/web-entwicklung/was-ist-test-driven-development/},
	shorttitle = {Test Driven Development},
	abstract = {Test Driven Development ({TDD}) ist der englische Begriff für die testgetriebene Entwicklung, eine beliebte Designstrategie, die die Qualität einer Software erhöht.},
	titleaddon = {{IONOS} Digital Guide},
	author = {{IONOS}},
	urldate = {2024-01-03},
	date = {2020-07-23},
	langid = {german},
}

@book{beck_test_2022,
	title = {Test Driven Development: By Example},
	isbn = {9780137585236},
	shorttitle = {Test Driven Development},
	abstract = {Quite simply, test-driven development is meant to eliminate fear in application development. While some fear is healthy (often viewed as a conscience that tells programmers to "be careful!"), the author believes that byproducts of fear include tentative, grumpy, and uncommunicative programmers who are unable to absorb constructive criticism. When programming teams buy into {TDD}, they immediately see positive results. They eliminate the fear involved in their jobs, and are better equipped to tackle the difficult challenges that face them. {TDD} eliminates tentative traits, it teaches programmers to communicate, and it encourages team members to seek out criticism However, even the author admits that grumpiness must be worked out individually! In short, the premise behind {TDD} is that code should be continually tested and refactored. Kent Beck teaches programmers by example, so they can painlessly and dramatically increase the quality of their work.},
	pagetotal = {241},
	publisher = {Addison-Wesley Professional},
	author = {Beck, Kent},
	date = {2022-03-25},
	langid = {english},
	note = {Google-Books-{ID}: {zNnPEAAAQBAJ}},
	keywords = {Computers / Software Development \& Engineering / General, Computers / Software Development \& Engineering / Quality Assurance \& Testing},
}

@incollection{schatten_qualitatssicherung_2010,
	location = {Heidelberg},
	title = {Qualitätssicherung und Test-Driven Development},
	isbn = {9783827424877},
	url = {https://doi.org/10.1007/978-3-8274-2487-7_5},
	abstract = {Die Überprüfbarkeit von Anforderungen ist ein wesentliches Kriterium in der modernen Software-Entwicklung. Man muss sich bei der Erhebung der Kundenanforderungen, der Definition der Architektur und der Festlegung der Realisierung der Software-Lösung bereits darüber Gedanken machen, wie Komponenten, Subsysteme und Systeme überprüft werden können. Dieses Kapitel widmet sich grundlegenden Konzepten der Qualitätssicherung in der modernen Software-Herstellung, wie Software Reviews, Inspektionen, Architekturreviews und Konzepten des Software-Testens. Ergänzend zur Testbarkeit von Anforderungen ist auch die Nachvollziehbarkeit von qualitätssichernden Maßnahmen und deren Ergebnissen relevant.},
	pages = {113--162},
	booktitle = {Best Practice Software-Engineering: Eine praxiserprobte Zusammenstellung von komponentenorientierten Konzepten, Methoden und Werkzeugen},
	publisher = {Spektrum Akademischer Verlag},
	author = {Schatten, Alexander and Demolsky, Markus and Winkler, Dietmar and Biffl, Stefan and Gostischa-Franta, Erik and Östreicher, Thomas},
	editor = {Schatten, Alexander and Demolsky, Markus and Winkler, Dietmar and Biffl, Stefan and Gostischa-Franta, Erik and Östreicher, Thomas},
	urldate = {2024-01-03},
	date = {2010},
	langid = {german},
	doi = {10.1007/978-3-8274-2487-7_5},
}
